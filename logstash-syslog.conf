input {
        udp {
                type => "syslog"
                port => "9999"
        }
}
filter {
        if [type] == "syslog" {
                        dns {
                                reverse => [ "host" ] action => "replace"
                        }
                                mutate { add_tag => [ "syslog" ]
                        }
        }
}
filter {
        if "syslog" in [tags] {
                grok {
                        pattern => [ "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" ]
                        add_field => [ "received_at", "%{@timestamp}" ]
                        add_field => [ "received_from", "%{@source_host}" ]
                }
                date {
                        match => [ "syslog_timestamp", "MMM d HH:mm:ss", "MMM dd HH:mm:ss" ]
                }
                mutate {
                        exclude_tags => "_grokparsefailure"
                        replace => [ "@source_host", "%{syslog_hostname}" ]
                        replace => [ "@message", "%{syslog_message}" ]
                }
                mutate {
                        remove => [ "syslog_hostname", "syslog_message", "syslog_timestamp", "received_at", "received_from" ]
                }
        }
        if "_grokparsefailure" in [tags] {
                if "syslog" in [tags] {
                        grok {
                                break_on_match => false
                                match => [
                                "message", "${GREEDYDATA:message-syslog}"
                                ]
                        }
                }
        }
}
output {
        elasticsearch_http {
                host => "127.0.0.1"
                flush_size => 1
                manage_template => false
        }
}

